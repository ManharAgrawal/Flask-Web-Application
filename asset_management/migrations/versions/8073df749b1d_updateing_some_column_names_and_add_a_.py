"""Updateing some column names and add a new table name TypeName

Revision ID: 8073df749b1d
Revises: 
Create Date: 2024-03-11 23:30:23.827645

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8073df749b1d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datatype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('integer', sa.Integer(), nullable=False),
    sa.Column('string', sa.String(), nullable=False),
    sa.Column('boolean', sa.Boolean(), nullable=True),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['fields.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('fields', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('type', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('group_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('fields_group_name_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'groups', ['group_id'], ['id'])
        batch_op.drop_column('is_default')
        batch_op.drop_column('group_name_id')
        batch_op.drop_column('text')

    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('groups_user_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('user')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('groups_user_fkey', 'users', ['user'], ['id'])
        batch_op.drop_column('user_id')

    with op.batch_alter_table('fields', schema=None) as batch_op:
        batch_op.add_column(sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('group_name_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fields_group_name_id_fkey', 'groups', ['group_name_id'], ['id'])
        batch_op.drop_column('group_id')
        batch_op.drop_column('type')
        batch_op.drop_column('description')

    op.drop_table('datatype')
    # ### end Alembic commands ###
